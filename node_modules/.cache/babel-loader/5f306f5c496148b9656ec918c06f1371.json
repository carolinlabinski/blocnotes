{"ast":null,"code":"var _jsxFileName = \"/Users/carolinlabinski/Documents/THP_next/sem5/day4_blocnote/blocnote/src/components/MarkdownInput/MarkdownInput.jsx\";\nimport React, { useState, useEffect } from \"react\"; // import noteReducer from \"../reducers/noteReducer\";\n\nconst MarkdownInput = ({\n  triggerSetNote\n}) => {\n  const [input, setInput] = useState({}); // const [input, dispatch] = useReducer(noteReducer, []);\n\n  useEffect(e => {\n    setInput({ ...input,\n      [e.currentTarget.name]: e.currentTarget.value\n    });\n    localStorage.setItem(\"mynote\", JSON.stringify(input));\n  }, [input]);\n\n  const handleInputChange = e => {\n    e.preventDefault(); // setInput({\n    // \t...input,\n    // \t[e.currentTarget.name]: e.currentTarget.value,\n    // });\n\n    triggerSetNote(input);\n  };\n\n  console.log(\"Input\" + input); // const handleClick = (e) => {\n  // \te.preventDefault();\n  // \t// triggerSetNote(input);\n  // \t// e.preventDefault();\n  // \t// localStorage.setItem(\"mynote\", JSON.stringify(input));\n  // \tconsole.log(\"Click happened\");\n  // };\n  // localStorage.setItem(\"mynote\", JSON.stringify(input)); // creates a json string to save in local storage\n  // const result = localStorage.getItem(\"mynote\"); //returns json string of object\n  // const jsonResult = JSON.parse(result); // to get back the object\n  // console.log(\"result string\" + result);\n  // console.log(\"result\" + jsonResult);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"text\",\n    name: \"notetitle\",\n    onChange: handleInputChange // onInput={handleClick}\n    ,\n    rows: \"1\",\n    cols: \"40\",\n    style: {\n      marginLeft: \"10px\"\n    },\n    placeholder: \"Note title...\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"text\",\n    name: \"note\",\n    onChange: handleInputChange // onInput={handleClick}\n    ,\n    rows: \"4\",\n    cols: \"50\",\n    style: {\n      marginLeft: \"10px\"\n    },\n    placeholder: \"Write your bloc note...\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"btn btn-dark\",\n    type: \"submit\",\n    value: \"Save\",\n    style: {\n      marginLeft: \"10px\"\n    } // onInput={handleClick}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 6\n    }\n  }))));\n};\n\nexport default MarkdownInput;\n{}\n/* <button style={{ marginLeft: \"10px\" }} className=\"btn btn-dark\">\nSave note\n</button> */\n// setNote function\n// const note = { title: \"variable\", text: \"variable\" }; //gets infos of the textarea\n// localStorage.setItem(\"mynote\", JSON.stringify(note)); // creates a json string to save in local storage\n// const result = localStorage.getItem('mynote'); //returns json string of object\n// JSON.parse(result); // to get back the object\n// const saveNote = (input) => {\n// \tlocalStorage.setItem(\"mynote\", JSON.stringify(input));\n// \tconst result = localStorage.getItem(\"mynote\");\n// \tJSON.parse(result);\n// \tconsole.log(result);\n// };","map":{"version":3,"sources":["/Users/carolinlabinski/Documents/THP_next/sem5/day4_blocnote/blocnote/src/components/MarkdownInput/MarkdownInput.jsx"],"names":["React","useState","useEffect","MarkdownInput","triggerSetNote","input","setInput","e","currentTarget","name","value","localStorage","setItem","JSON","stringify","handleInputChange","preventDefault","console","log","marginLeft"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAwB;AAC7C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC,CAD6C,CAE7C;;AACAC,EAAAA,SAAS,CACPK,CAAD,IAAO;AACND,IAAAA,QAAQ,CAAC,EACR,GAAGD,KADK;AAER,OAACE,CAAC,CAACC,aAAF,CAAgBC,IAAjB,GAAwBF,CAAC,CAACC,aAAF,CAAgBE;AAFhC,KAAD,CAAR;AAIAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BC,IAAI,CAACC,SAAL,CAAeT,KAAf,CAA/B;AACA,GAPO,EAQR,CAACA,KAAD,CARQ,CAAT;;AAWA,QAAMU,iBAAiB,GAAIR,CAAD,IAAO;AAChCA,IAAAA,CAAC,CAACS,cAAF,GADgC,CAEhC;AACA;AACA;AACA;;AACAZ,IAAAA,cAAc,CAACC,KAAD,CAAd;AACA,GAPD;;AASAY,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAUb,KAAtB,EAvB6C,CAyB7C;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AACC,IAAA,IAAI,EAAC,MADN;AAEC,IAAA,IAAI,EAAC,WAFN;AAGC,IAAA,QAAQ,EAAEU,iBAHX,CAIC;AAJD;AAKC,IAAA,IAAI,EAAC,GALN;AAMC,IAAA,IAAI,EAAC,IANN;AAOC,IAAA,KAAK,EAAE;AAAEI,MAAAA,UAAU,EAAE;AAAd,KAPR;AAQC,IAAA,WAAW,EAAC,eARb;AASC,IAAA,QAAQ,MATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAYC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZD,eAaC;AACC,IAAA,IAAI,EAAC,MADN;AAEC,IAAA,IAAI,EAAC,MAFN;AAGC,IAAA,QAAQ,EAAEJ,iBAHX,CAIC;AAJD;AAKC,IAAA,IAAI,EAAC,GALN;AAMC,IAAA,IAAI,EAAC,IANN;AAOC,IAAA,KAAK,EAAE;AAAEI,MAAAA,UAAU,EAAE;AAAd,KAPR;AAQC,IAAA,WAAW,EAAC,yBARb;AASC,IAAA,QAAQ,MATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbD,eAwBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBD,eAyBC;AACC,IAAA,SAAS,EAAC,cADX;AAEC,IAAA,IAAI,EAAC,QAFN;AAGC,IAAA,KAAK,EAAC,MAHP;AAIC,IAAA,KAAK,EAAE;AAAEA,MAAAA,UAAU,EAAE;AAAd,KAJR,CAKC;AALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBD,CADD,CADD,CADD;AAuCA,CA9ED;;AAgFA,eAAehB,aAAf;AAEA,CAIC;AAHA;;;AAKD;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// import noteReducer from \"../reducers/noteReducer\";\n\nconst MarkdownInput = ({ triggerSetNote }) => {\n\tconst [input, setInput] = useState({});\n\t// const [input, dispatch] = useReducer(noteReducer, []);\n\tuseEffect(\n\t\t(e) => {\n\t\t\tsetInput({\n\t\t\t\t...input,\n\t\t\t\t[e.currentTarget.name]: e.currentTarget.value,\n\t\t\t});\n\t\t\tlocalStorage.setItem(\"mynote\", JSON.stringify(input));\n\t\t},\n\t\t[input]\n\t);\n\n\tconst handleInputChange = (e) => {\n\t\te.preventDefault();\n\t\t// setInput({\n\t\t// \t...input,\n\t\t// \t[e.currentTarget.name]: e.currentTarget.value,\n\t\t// });\n\t\ttriggerSetNote(input);\n\t};\n\n\tconsole.log(\"Input\" + input);\n\n\t// const handleClick = (e) => {\n\t// \te.preventDefault();\n\t// \t// triggerSetNote(input);\n\t// \t// e.preventDefault();\n\t// \t// localStorage.setItem(\"mynote\", JSON.stringify(input));\n\t// \tconsole.log(\"Click happened\");\n\t// };\n\n\t// localStorage.setItem(\"mynote\", JSON.stringify(input)); // creates a json string to save in local storage\n\t// const result = localStorage.getItem(\"mynote\"); //returns json string of object\n\t// const jsonResult = JSON.parse(result); // to get back the object\n\t// console.log(\"result string\" + result);\n\t// console.log(\"result\" + jsonResult);\n\n\treturn (\n\t\t<div>\n\t\t\t<form>\n\t\t\t\t<label>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"notetitle\"\n\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t// onInput={handleClick}\n\t\t\t\t\t\trows=\"1\"\n\t\t\t\t\t\tcols=\"40\"\n\t\t\t\t\t\tstyle={{ marginLeft: \"10px\" }}\n\t\t\t\t\t\tplaceholder=\"Note title...\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"note\"\n\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\t// onInput={handleClick}\n\t\t\t\t\t\trows=\"4\"\n\t\t\t\t\t\tcols=\"50\"\n\t\t\t\t\t\tstyle={{ marginLeft: \"10px\" }}\n\t\t\t\t\t\tplaceholder=\"Write your bloc note...\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<br />\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"btn btn-dark\"\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tvalue=\"Save\"\n\t\t\t\t\t\tstyle={{ marginLeft: \"10px\" }}\n\t\t\t\t\t\t// onInput={handleClick}\n\t\t\t\t\t></input>\n\t\t\t\t</label>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nexport default MarkdownInput;\n\n{\n\t/* <button style={{ marginLeft: \"10px\" }} className=\"btn btn-dark\">\nSave note\n</button> */\n}\n\n// setNote function\n// const note = { title: \"variable\", text: \"variable\" }; //gets infos of the textarea\n// localStorage.setItem(\"mynote\", JSON.stringify(note)); // creates a json string to save in local storage\n// const result = localStorage.getItem('mynote'); //returns json string of object\n// JSON.parse(result); // to get back the object\n\n// const saveNote = (input) => {\n// \tlocalStorage.setItem(\"mynote\", JSON.stringify(input));\n// \tconst result = localStorage.getItem(\"mynote\");\n// \tJSON.parse(result);\n// \tconsole.log(result);\n// };\n"]},"metadata":{},"sourceType":"module"}