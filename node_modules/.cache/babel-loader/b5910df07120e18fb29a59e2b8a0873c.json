{"ast":null,"code":"var _jsxFileName = \"/Users/carolinlabinski/Documents/THP_next/sem5/day4_blocnote/blocnote/src/components/MarkdownInput/MarkdownInput.jsx\";\nimport React, { useState, useEffect } from \"react\";\n\nconst MarkdownInput = ({\n  triggerSetNote,\n  note\n}) => {\n  const [input, setInput] = useState({});\n\n  const handleInputChange = e => setInput({ ...input,\n    [e.currentTarget.name]: e.currentTarget.value\n  });\n\n  const handleClick = e => {\n    e.preventDefault();\n    triggerSetNote(input);\n    localStorage.setItem(input.note, JSON.stringify(input));\n    getAllItems();\n  };\n\n  const getAllItems = () => {\n    let allnotekeys = [];\n\n    for (let i = 0; i <= localStorage.length; i++) {\n      console.log(\"Show keys \" + localStorage.key(i));\n      let xx = allnotekeys.push(localStorage.key(i)); // let notekeys = JSON.parse(localStorage.getItem(localStorage.key(i)));\n\n      console.log(\"Keys \" + xx);\n    }\n  }; // \tconst dispayNotes = notes.map ((item, key) =>\n  //     <li key={item.id}>{item.name}</li>\n  // );\n  // const notesListRender = notes.map((n, id) => (\n  //     <li key={id} className=\"list-group-item\">\n  //       <a href=\"#\" onClick={() => getStorageItem(n)}>\n  //         {n} - {JSON.parse(localStorage.getItem(n)).slice(0, 15)}\n  //       </a>\n  //     </li>\n  //   ));\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"text\",\n    name: \"notetitle\",\n    onChange: handleInputChange,\n    rows: \"1\",\n    cols: \"40\",\n    style: {\n      marginLeft: \"10px\"\n    },\n    placeholder: \"Note title...\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"text\",\n    name: \"note\",\n    onChange: handleInputChange,\n    rows: \"4\",\n    cols: \"50\",\n    style: {\n      marginLeft: \"10px\"\n    },\n    placeholder: \"Write your bloc note...\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"btn btn-dark\",\n    type: \"submit\",\n    value: \"Save\",\n    style: {\n      marginLeft: \"10px\"\n    },\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 6\n    }\n  }))));\n};\n\nexport default MarkdownInput;","map":{"version":3,"sources":["/Users/carolinlabinski/Documents/THP_next/sem5/day4_blocnote/blocnote/src/components/MarkdownInput/MarkdownInput.jsx"],"names":["React","useState","useEffect","MarkdownInput","triggerSetNote","note","input","setInput","handleInputChange","e","currentTarget","name","value","handleClick","preventDefault","localStorage","setItem","JSON","stringify","getAllItems","allnotekeys","i","length","console","log","key","xx","push","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst MarkdownInput = ({ triggerSetNote, note }) => {\n\tconst [input, setInput] = useState({});\n\n\tconst handleInputChange = (e) =>\n\t\tsetInput({\n\t\t\t...input,\n\t\t\t[e.currentTarget.name]: e.currentTarget.value,\n\t\t});\n\n\tconst handleClick = (e) => {\n\t\te.preventDefault();\n\t\ttriggerSetNote(input);\n\t\tlocalStorage.setItem(input.note, JSON.stringify(input));\n\t\tgetAllItems();\n\t};\n\n\tconst getAllItems = () => {\n\t\tlet allnotekeys = [];\n\t\tfor (let i = 0; i <= localStorage.length; i++) {\n\t\t\tconsole.log(\"Show keys \" + localStorage.key(i));\n\t\t\tlet xx = allnotekeys.push(localStorage.key(i));\n\t\t\t// let notekeys = JSON.parse(localStorage.getItem(localStorage.key(i)));\n\t\t\tconsole.log(\"Keys \" + xx);\n\t\t}\n\t};\n\n\t// \tconst dispayNotes = notes.map ((item, key) =>\n\t//     <li key={item.id}>{item.name}</li>\n\t// );\n\n\t// const notesListRender = notes.map((n, id) => (\n\t//     <li key={id} className=\"list-group-item\">\n\t//       <a href=\"#\" onClick={() => getStorageItem(n)}>\n\t//         {n} - {JSON.parse(localStorage.getItem(n)).slice(0, 15)}\n\t//       </a>\n\t//     </li>\n\t//   ));\n\n\treturn (\n\t\t<div>\n\t\t\t{/* <p style={{ marginLeft: \"10px\" }} {notesListRender} > </p> */}\n\t\t\t<form>\n\t\t\t\t<label>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"notetitle\"\n\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\trows=\"1\"\n\t\t\t\t\t\tcols=\"40\"\n\t\t\t\t\t\tstyle={{ marginLeft: \"10px\" }}\n\t\t\t\t\t\tplaceholder=\"Note title...\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"note\"\n\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\trows=\"4\"\n\t\t\t\t\t\tcols=\"50\"\n\t\t\t\t\t\tstyle={{ marginLeft: \"10px\" }}\n\t\t\t\t\t\tplaceholder=\"Write your bloc note...\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<br />\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"btn btn-dark\"\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tvalue=\"Save\"\n\t\t\t\t\t\tstyle={{ marginLeft: \"10px\" }}\n\t\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\t></input>\n\t\t\t\t</label>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nexport default MarkdownInput;\n"]},"metadata":{},"sourceType":"module"}