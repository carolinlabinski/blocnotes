{"ast":null,"code":"var _jsxFileName = \"/Users/carolinlabinski/Documents/THP_next/sem5/day4_blocnote/blocnote/src/components/NoteList/NoteList.jsx\";\nimport React, { useState, useEffect } from \"react\";\n\nconst NoteDisplay = ({\n  triggerShowStorage\n}) => {\n  // const getAllItems = () => {\n  // \tvar allnotekeys = [];\n  // \tfor (let i = 0; i <= localStorage.length; i++) {\n  // \t\tconsole.log(\"Show keys \" + localStorage.key(i));\n  // \t\tlet xx = allnotekeys.push(localStorage.key(i));\n  // \t\t// let notekeys = JSON.parse(localStorage.getItem(localStorage.key(i)));\n  // \t\tconsole.log(\"Keys list \" + allnotekeys);\n  // \t\t// let allnotes = allnotekeys.map()\n  // \t}\n  // };\n  const [data, setDataList] = useState({});\n  useEffect(() => {\n    let notes = [];\n\n    for (let i = 0; i < localStorage.length; i++) {\n      notes.push(JSON.parse(localStorage.key(i)));\n    }\n\n    updateMyData(notes);\n  }, []);\n\n  const updateMyData = data => {\n    setDataList(data);\n  };\n\n  const renderedItem = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(ListDisplay, {\n    noteList: dataList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }\n  }));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }\n  }, \"notes\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }\n  }, dataList && dataList.length > 0 ? renderedItem : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 55\n    }\n  }, \"Aucune note\")));\n};\n\nexport default NoteDisplay;\n\nconst ListDisplay = ({\n  noteList\n}) => {\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    id: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 3\n    }\n  }, noteList.map((data, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notes-list\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, data.title ? data.title : \"Sans titre\"), \" :\", \" \", data.text ? data.text.substring(0, 15) : \"(vide)\"))));\n};","map":{"version":3,"sources":["/Users/carolinlabinski/Documents/THP_next/sem5/day4_blocnote/blocnote/src/components/NoteList/NoteList.jsx"],"names":["React","useState","useEffect","NoteDisplay","triggerShowStorage","data","setDataList","notes","i","localStorage","length","push","JSON","parse","key","updateMyData","renderedItem","dataList","ListDisplay","noteList","map","index","title","text","substring"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA4B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAM,CAACC,IAAD,EAAOC,WAAP,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIK,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,YAAY,CAACC,MAAjC,EAAyCF,CAAC,EAA1C,EAA8C;AAC7CD,MAAAA,KAAK,CAACI,IAAN,CAAWC,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACK,GAAb,CAAiBN,CAAjB,CAAX,CAAX;AACA;;AACDO,IAAAA,YAAY,CAACR,KAAD,CAAZ;AACA,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMQ,YAAY,GAAIV,IAAD,IAAU;AAC9BC,IAAAA,WAAW,CAACD,IAAD,CAAX;AACA,GAFD;;AAIA,QAAMW,YAAY,gBACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,WAAD;AAAa,IAAA,QAAQ,EAAEC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD;AAMA,sBACC,uDACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEA,QAAQ,IAAIA,QAAQ,CAACP,MAAT,GAAkB,CAA9B,GAAkCM,YAAlC,gBAAiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADnD,CAFD,CADD;AAQA,CAxCD;;AA0CA,eAAeb,WAAf;;AAEA,MAAMe,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACrC,sBACC;AAAI,IAAA,EAAE,EAAC,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEA,QAAQ,CAACC,GAAT,CAAa,CAACf,IAAD,EAAOgB,KAAP,kBACb;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,GAAG,EAAEA,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIhB,IAAI,CAACiB,KAAL,GAAajB,IAAI,CAACiB,KAAlB,GAA0B,YAA9B,CADD,QACmD,GADnD,EAEEjB,IAAI,CAACkB,IAAL,GAAYlB,IAAI,CAACkB,IAAL,CAAUC,SAAV,CAAoB,CAApB,EAAuB,EAAvB,CAAZ,GAAyC,QAF3C,CADD,CADA,CADF,CADD;AAYA,CAbD","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst NoteDisplay = ({ triggerShowStorage }) => {\n\t// const getAllItems = () => {\n\t// \tvar allnotekeys = [];\n\t// \tfor (let i = 0; i <= localStorage.length; i++) {\n\t// \t\tconsole.log(\"Show keys \" + localStorage.key(i));\n\t// \t\tlet xx = allnotekeys.push(localStorage.key(i));\n\t// \t\t// let notekeys = JSON.parse(localStorage.getItem(localStorage.key(i)));\n\t// \t\tconsole.log(\"Keys list \" + allnotekeys);\n\t// \t\t// let allnotes = allnotekeys.map()\n\t// \t}\n\t// };\n\n\tconst [data, setDataList] = useState({});\n\n\tuseEffect(() => {\n\t\tlet notes = [];\n\t\tfor (let i = 0; i < localStorage.length; i++) {\n\t\t\tnotes.push(JSON.parse(localStorage.key(i)));\n\t\t}\n\t\tupdateMyData(notes);\n\t}, []);\n\n\tconst updateMyData = (data) => {\n\t\tsetDataList(data);\n\t};\n\n\tconst renderedItem = (\n\t\t<div>\n\t\t\t<ListDisplay noteList={dataList} />\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<h3>notes</h3>\n\t\t\t<div>\n\t\t\t\t{dataList && dataList.length > 0 ? renderedItem : <p>Aucune note</p>}\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default NoteDisplay;\n\nconst ListDisplay = ({ noteList }) => {\n\treturn (\n\t\t<ul id=\"container\">\n\t\t\t{noteList.map((data, index) => (\n\t\t\t\t<div className=\"notes-list\" key={index}>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<b>{data.title ? data.title : \"Sans titre\"}</b> :{\" \"}\n\t\t\t\t\t\t{data.text ? data.text.substring(0, 15) : \"(vide)\"}\n\t\t\t\t\t</li>\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</ul>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}