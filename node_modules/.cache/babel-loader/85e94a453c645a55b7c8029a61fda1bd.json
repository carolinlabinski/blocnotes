{"ast":null,"code":"import React, { useState, useEffect } from \"react\";\n\nconst NoteDisplay = ({\n  triggerShowStorage\n}) => {\n  const [dataList, setDataList] = useState(); // const getAllItems = () => {\n  // \tvar allnotekeys = [];\n  // \tfor (let i = 0; i <= localStorage.length; i++) {\n  // \t\tconsole.log(\"Show keys \" + localStorage.key(i));\n  // \t\tlet xx = allnotekeys.push(localStorage.key(i));\n  // \t\t// let notekeys = JSON.parse(localStorage.getItem(localStorage.key(i)));\n  // \t\tconsole.log(\"Keys list \" + allnotekeys);\n  // \t\t// let allnotes = allnotekeys.map()\n  // \t}\n  // };\n  // \tconst [dataList, setDataList] = useState({});\n  // \tuseEffect(() => {\n  // \t\tlet notes = [];\n  // \t\tfor (let i = 0; i < localStorage.length; i++) {\n  // \t\t\tnotes.push(JSON.parse(localStorage.getItem(i)));\n  // \t\t}\n  // \t\tupdateMyData(notes);\n  // \t}, []);\n  // \tconst updateMyData = (data) => {\n  // \t\tsetDataList(data);\n  // \t};\n  // \tconst renderedItem = (\n  // \t\t<div>\n  // \t\t\t<ListDisplay noteList={dataList} />\n  // \t\t</div>\n  // \t);\n  // \treturn (\n  // \t\t<>\n  // \t\t\t<h3>notes</h3>\n  // \t\t\t<div>\n  // \t\t\t\t{dataList && dataList.length > 0 ? renderedItem : <p>Aucune note</p>}\n  // \t\t\t</div>\n  // \t\t</>\n  // \t);\n};\n\nexport default NoteDisplay; // const ListDisplay = ({ noteList }) => {\n// \treturn (\n// \t\t<ul id=\"container\">\n// \t\t\t{noteList.map((data, index) => (\n// \t\t\t\t<div className=\"notes-list\" key={index}>\n// \t\t\t\t\t<li>{data.substring}</li>\n// \t\t\t\t</div>\n// \t\t\t))}\n// \t\t</ul>\n// \t);\n// };","map":{"version":3,"sources":["/Users/carolinlabinski/Documents/THP_next/sem5/day4_blocnote/blocnote/src/components/NoteList/NoteList.jsx"],"names":["React","useState","useEffect","NoteDisplay","triggerShowStorage","dataList","setDataList"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA4B;AAC/C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,EAAxC,CAD+C,CAG/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArCD;;AAuCA,eAAeE,WAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst NoteDisplay = ({ triggerShowStorage }) => {\n\tconst [dataList, setDataList] = useState();\n\n\t// const getAllItems = () => {\n\t// \tvar allnotekeys = [];\n\t// \tfor (let i = 0; i <= localStorage.length; i++) {\n\t// \t\tconsole.log(\"Show keys \" + localStorage.key(i));\n\t// \t\tlet xx = allnotekeys.push(localStorage.key(i));\n\t// \t\t// let notekeys = JSON.parse(localStorage.getItem(localStorage.key(i)));\n\t// \t\tconsole.log(\"Keys list \" + allnotekeys);\n\t// \t\t// let allnotes = allnotekeys.map()\n\t// \t}\n\t// };\n\t// \tconst [dataList, setDataList] = useState({});\n\t// \tuseEffect(() => {\n\t// \t\tlet notes = [];\n\t// \t\tfor (let i = 0; i < localStorage.length; i++) {\n\t// \t\t\tnotes.push(JSON.parse(localStorage.getItem(i)));\n\t// \t\t}\n\t// \t\tupdateMyData(notes);\n\t// \t}, []);\n\t// \tconst updateMyData = (data) => {\n\t// \t\tsetDataList(data);\n\t// \t};\n\t// \tconst renderedItem = (\n\t// \t\t<div>\n\t// \t\t\t<ListDisplay noteList={dataList} />\n\t// \t\t</div>\n\t// \t);\n\t// \treturn (\n\t// \t\t<>\n\t// \t\t\t<h3>notes</h3>\n\t// \t\t\t<div>\n\t// \t\t\t\t{dataList && dataList.length > 0 ? renderedItem : <p>Aucune note</p>}\n\t// \t\t\t</div>\n\t// \t\t</>\n\t// \t);\n};\n\nexport default NoteDisplay;\n\n// const ListDisplay = ({ noteList }) => {\n// \treturn (\n// \t\t<ul id=\"container\">\n// \t\t\t{noteList.map((data, index) => (\n// \t\t\t\t<div className=\"notes-list\" key={index}>\n// \t\t\t\t\t<li>{data.substring}</li>\n// \t\t\t\t</div>\n// \t\t\t))}\n// \t\t</ul>\n// \t);\n// };\n"]},"metadata":{},"sourceType":"module"}