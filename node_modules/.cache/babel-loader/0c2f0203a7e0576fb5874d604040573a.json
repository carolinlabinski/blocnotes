{"ast":null,"code":"var _jsxFileName = \"/Users/carolinlabinski/Documents/THP_next/sem5/day4_blocnote/blocnote/src/components/MarkdownInput/MarkdownInput.jsx\";\nimport React, { useState, useEffect, useReducer } from \"react\";\nimport noteReducer from \"../reducers/noteReducer\";\n\nconst MarkdownInput = () => {\n  // const [input, setInput] = useState({});\n  const [input, dispatch] = useReducer(noteReducer, []); // useEffect(() => {\n  // \tlocalStorage.setItem(\"mynote\", JSON.stringify(input));\n  // }, [input]);\n\n  const handleInputChange = e => setInput({ ...input,\n    [e.currentTarget.name]: e.currentTarget.value\n  });\n\n  console.log(\"Input\" + input);\n\n  const handleClick = e => {\n    e.preventDefault();\n    localStorage.setItem(\"mynote\", JSON.stringify(input));\n    console.log(\"Click happened\");\n  }; // localStorage.setItem(\"mynote\", JSON.stringify(input)); // creates a json string to save in local storage\n  // const result = localStorage.getItem(\"mynote\"); //returns json string of object\n  // const jsonResult = JSON.parse(result); // to get back the object\n  // console.log(\"result string\" + result);\n  // console.log(\"result\" + jsonResult);\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      marginLeft: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }\n  }, \" I'm the Markdown Input\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"text\",\n    name: \"notetitle\",\n    onChange: handleInputChange,\n    rows: \"1\",\n    cols: \"40\",\n    style: {\n      marginLeft: \"10px\"\n    },\n    placeholder: \"Note title...\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"text\",\n    name: \"note\",\n    onChange: handleInputChange,\n    rows: \"4\",\n    cols: \"50\",\n    style: {\n      marginLeft: \"10px\"\n    },\n    placeholder: \"Write your bloc note...\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"btn btn-dark\",\n    type: \"submit\",\n    value: \"Save\",\n    style: {\n      marginLeft: \"10px\"\n    },\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 6\n    }\n  }))));\n};\n\nexport default MarkdownInput;\n{}\n/* <button style={{ marginLeft: \"10px\" }} className=\"btn btn-dark\">\nSave note\n</button> */\n// setNote function\n// const note = { title: \"variable\", text: \"variable\" }; //gets infos of the textarea\n// localStorage.setItem(\"mynote\", JSON.stringify(note)); // creates a json string to save in local storage\n// const result = localStorage.getItem('mynote'); //returns json string of object\n// JSON.parse(result); // to get back the object\n// const saveNote = (input) => {\n// \tlocalStorage.setItem(\"mynote\", JSON.stringify(input));\n// \tconst result = localStorage.getItem(\"mynote\");\n// \tJSON.parse(result);\n// \tconsole.log(result);\n// };","map":{"version":3,"sources":["/Users/carolinlabinski/Documents/THP_next/sem5/day4_blocnote/blocnote/src/components/MarkdownInput/MarkdownInput.jsx"],"names":["React","useState","useEffect","useReducer","noteReducer","MarkdownInput","input","dispatch","handleInputChange","e","setInput","currentTarget","name","value","console","log","handleClick","preventDefault","localStorage","setItem","JSON","stringify","marginLeft"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,WAAP,MAAwB,yBAAxB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC3B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,UAAU,CAACC,WAAD,EAAc,EAAd,CAApC,CAF2B,CAG3B;AACA;AACA;;AAEA,QAAMI,iBAAiB,GAAIC,CAAD,IACzBC,QAAQ,CAAC,EACR,GAAGJ,KADK;AAER,KAACG,CAAC,CAACE,aAAF,CAAgBC,IAAjB,GAAwBH,CAAC,CAACE,aAAF,CAAgBE;AAFhC,GAAD,CADT;;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAUT,KAAtB;;AAEA,QAAMU,WAAW,GAAIP,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACQ,cAAF;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BC,IAAI,CAACC,SAAL,CAAef,KAAf,CAA/B;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,GAJD,CAf2B,CAqB3B;AACA;AACA;AACA;AACA;;;AAEA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAG,IAAA,KAAK,EAAE;AAAEO,MAAAA,UAAU,EAAE;AAAd,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADD,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AACC,IAAA,IAAI,EAAC,MADN;AAEC,IAAA,IAAI,EAAC,WAFN;AAGC,IAAA,QAAQ,EAAEd,iBAHX;AAIC,IAAA,IAAI,EAAC,GAJN;AAKC,IAAA,IAAI,EAAC,IALN;AAMC,IAAA,KAAK,EAAE;AAAEc,MAAAA,UAAU,EAAE;AAAd,KANR;AAOC,IAAA,WAAW,EAAC,eAPb;AAQC,IAAA,QAAQ,MART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAWC;AACC,IAAA,IAAI,EAAC,MADN;AAEC,IAAA,IAAI,EAAC,MAFN;AAGC,IAAA,QAAQ,EAAEd,iBAHX;AAIC,IAAA,IAAI,EAAC,GAJN;AAKC,IAAA,IAAI,EAAC,IALN;AAMC,IAAA,KAAK,EAAE;AAAEc,MAAAA,UAAU,EAAE;AAAd,KANR;AAOC,IAAA,WAAW,EAAC,yBAPb;AAQC,IAAA,QAAQ,MART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXD,eAqBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBD,eAsBC;AACC,IAAA,SAAS,EAAC,cADX;AAEC,IAAA,IAAI,EAAC,QAFN;AAGC,IAAA,KAAK,EAAC,MAHP;AAIC,IAAA,KAAK,EAAE;AAAEA,MAAAA,UAAU,EAAE;AAAd,KAJR;AAKC,IAAA,OAAO,EAAEN,WALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBD,CADD,CAHD,CADD;AAsCA,CAjED;;AAmEA,eAAeX,aAAf;AAEA,CAIC;AAHA;;;AAKD;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, useEffect, useReducer } from \"react\";\nimport noteReducer from \"../reducers/noteReducer\";\n\nconst MarkdownInput = () => {\n\t// const [input, setInput] = useState({});\n\tconst [input, dispatch] = useReducer(noteReducer, []);\n\t// useEffect(() => {\n\t// \tlocalStorage.setItem(\"mynote\", JSON.stringify(input));\n\t// }, [input]);\n\n\tconst handleInputChange = (e) =>\n\t\tsetInput({\n\t\t\t...input,\n\t\t\t[e.currentTarget.name]: e.currentTarget.value,\n\t\t});\n\n\tconsole.log(\"Input\" + input);\n\n\tconst handleClick = (e) => {\n\t\te.preventDefault();\n\t\tlocalStorage.setItem(\"mynote\", JSON.stringify(input));\n\t\tconsole.log(\"Click happened\");\n\t};\n\n\t// localStorage.setItem(\"mynote\", JSON.stringify(input)); // creates a json string to save in local storage\n\t// const result = localStorage.getItem(\"mynote\"); //returns json string of object\n\t// const jsonResult = JSON.parse(result); // to get back the object\n\t// console.log(\"result string\" + result);\n\t// console.log(\"result\" + jsonResult);\n\n\treturn (\n\t\t<div>\n\t\t\t<p style={{ marginLeft: \"10px\" }}> I'm the Markdown Input</p>\n\n\t\t\t<form>\n\t\t\t\t<label>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"notetitle\"\n\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\trows=\"1\"\n\t\t\t\t\t\tcols=\"40\"\n\t\t\t\t\t\tstyle={{ marginLeft: \"10px\" }}\n\t\t\t\t\t\tplaceholder=\"Note title...\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"note\"\n\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\trows=\"4\"\n\t\t\t\t\t\tcols=\"50\"\n\t\t\t\t\t\tstyle={{ marginLeft: \"10px\" }}\n\t\t\t\t\t\tplaceholder=\"Write your bloc note...\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<br />\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"btn btn-dark\"\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tvalue=\"Save\"\n\t\t\t\t\t\tstyle={{ marginLeft: \"10px\" }}\n\t\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\t></input>\n\t\t\t\t</label>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nexport default MarkdownInput;\n\n{\n\t/* <button style={{ marginLeft: \"10px\" }} className=\"btn btn-dark\">\nSave note\n</button> */\n}\n\n// setNote function\n// const note = { title: \"variable\", text: \"variable\" }; //gets infos of the textarea\n// localStorage.setItem(\"mynote\", JSON.stringify(note)); // creates a json string to save in local storage\n// const result = localStorage.getItem('mynote'); //returns json string of object\n// JSON.parse(result); // to get back the object\n\n// const saveNote = (input) => {\n// \tlocalStorage.setItem(\"mynote\", JSON.stringify(input));\n// \tconst result = localStorage.getItem(\"mynote\");\n// \tJSON.parse(result);\n// \tconsole.log(result);\n// };\n"]},"metadata":{},"sourceType":"module"}