{"ast":null,"code":"var _jsxFileName = \"/Users/carolinlabinski/Documents/THP_next/sem5/day4_blocnote/blocnote/src/components/NoteList/NoteList.jsx\";\nimport React, { useState, useEffect } from \"react\";\n\nconst NoteList = ({\n  triggerShowStorage\n}) => {\n  const [dataList, setDataList] = useState();\n  useEffect(() => {\n    let notes = [];\n\n    for (let i = 0; i < localStorage.length; i++) {\n      notes.push(JSON.parse(localStorage.getItem(i)));\n    }\n\n    updateMyData(notes);\n  }, []);\n\n  const updateMyData = data => {\n    setDataList(data);\n  };\n\n  const ListDisplay = ({\n    data\n  }) => {\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      id: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 4\n      }\n    }, data.map((dataa, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"notes-list\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 8\n      }\n    }, dataa.title ? dataa.title : \"Sans titre\"), \" :\", \" \", dataa.text ? dataa.text.substring(0, 15) : \"(vide)\"))));\n  }; // const getAllItems = () => {\n  // \tvar allnotekeys = [];\n  // \tfor (let i = 0; i <= localStorage.length; i++) {\n  // \t\tconsole.log(\"Show keys \" + localStorage.key(i));\n  // \t\tlet xx = allnotekeys.push(localStorage.key(i));\n  // \t\t// let notekeys = JSON.parse(localStorage.getItem(localStorage.key(i)));\n  // \t\tconsole.log(\"Keys list \" + allnotekeys);\n  // \t\t// let allnotes = allnotekeys.map()\n  // \t}\n  // };\n\n};\n\nexport default NoteList;","map":{"version":3,"sources":["/Users/carolinlabinski/Documents/THP_next/sem5/day4_blocnote/blocnote/src/components/NoteList/NoteList.jsx"],"names":["React","useState","useEffect","NoteList","triggerShowStorage","dataList","setDataList","notes","i","localStorage","length","push","JSON","parse","getItem","updateMyData","data","ListDisplay","map","dataa","index","title","text","substring"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA4B;AAC5C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,EAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIK,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,YAAY,CAACC,MAAjC,EAAyCF,CAAC,EAA1C,EAA8C;AAC7CD,MAAAA,KAAK,CAACI,IAAN,CAAWC,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACK,OAAb,CAAqBN,CAArB,CAAX,CAAX;AACA;;AACDO,IAAAA,YAAY,CAACR,KAAD,CAAZ;AACA,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMQ,YAAY,GAAIC,IAAD,IAAU;AAC9BV,IAAAA,WAAW,CAACU,IAAD,CAAX;AACA,GAFD;;AAIA,QAAMC,WAAW,GAAG,CAAC;AAAED,IAAAA;AAAF,GAAD,KAAc;AACjC,wBACC;AAAI,MAAA,EAAE,EAAC,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEA,IAAI,CAACE,GAAL,CAAS,CAACC,KAAD,EAAQC,KAAR,kBACT;AAAK,MAAA,SAAS,EAAC,YAAf;AAA4B,MAAA,GAAG,EAAEA,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,KAAK,CAACE,KAAN,GAAcF,KAAK,CAACE,KAApB,GAA4B,YAAhC,CADD,QACqD,GADrD,EAEEF,KAAK,CAACG,IAAN,GAAaH,KAAK,CAACG,IAAN,CAAWC,SAAX,CAAqB,CAArB,EAAwB,EAAxB,CAAb,GAA2C,QAF7C,CADD,CADA,CADF,CADD;AAYA,GAbD,CAf4C,CA8B5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,CAxCD;;AA0CA,eAAepB,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst NoteList = ({ triggerShowStorage }) => {\n\tconst [dataList, setDataList] = useState();\n\n\tuseEffect(() => {\n\t\tlet notes = [];\n\t\tfor (let i = 0; i < localStorage.length; i++) {\n\t\t\tnotes.push(JSON.parse(localStorage.getItem(i)));\n\t\t}\n\t\tupdateMyData(notes);\n\t}, []);\n\n\tconst updateMyData = (data) => {\n\t\tsetDataList(data);\n\t};\n\n\tconst ListDisplay = ({ data }) => {\n\t\treturn (\n\t\t\t<ul id=\"container\">\n\t\t\t\t{data.map((dataa, index) => (\n\t\t\t\t\t<div className=\"notes-list\" key={index}>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<b>{dataa.title ? dataa.title : \"Sans titre\"}</b> :{\" \"}\n\t\t\t\t\t\t\t{dataa.text ? dataa.text.substring(0, 15) : \"(vide)\"}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t);\n\t};\n\n\t// const getAllItems = () => {\n\t// \tvar allnotekeys = [];\n\t// \tfor (let i = 0; i <= localStorage.length; i++) {\n\t// \t\tconsole.log(\"Show keys \" + localStorage.key(i));\n\t// \t\tlet xx = allnotekeys.push(localStorage.key(i));\n\t// \t\t// let notekeys = JSON.parse(localStorage.getItem(localStorage.key(i)));\n\t// \t\tconsole.log(\"Keys list \" + allnotekeys);\n\t// \t\t// let allnotes = allnotekeys.map()\n\t// \t}\n\t// };\n};\n\nexport default NoteList;\n"]},"metadata":{},"sourceType":"module"}