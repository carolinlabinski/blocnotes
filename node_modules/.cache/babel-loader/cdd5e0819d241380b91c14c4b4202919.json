{"ast":null,"code":"var _jsxFileName = \"/Users/carolinlabinski/Documents/THP_next/sem5/day4_blocnote/blocnote/src/components/NoteList/NoteList.jsx\";\nimport React, { useState, useEffect } from \"react\";\n\nconst NoteDisplay = ({\n  triggerShowStorage\n}) => {\n  // const getAllItems = () => {\n  // \tvar allnotekeys = [];\n  // \tfor (let i = 0; i <= localStorage.length; i++) {\n  // \t\tconsole.log(\"Show keys \" + localStorage.key(i));\n  // \t\tlet xx = allnotekeys.push(localStorage.key(i));\n  // \t\t// let notekeys = JSON.parse(localStorage.getItem(localStorage.key(i)));\n  // \t\tconsole.log(\"Keys list \" + allnotekeys);\n  // \t\t// let allnotes = allnotekeys.map()\n  // \t}\n  // };\n  const [note, setNote] = useState({});\n  let notes = [];\n\n  for (let i = 0; i < localStorage.length; i++) {\n    notes.push(localStorage.key(i));\n  }\n\n  useEffect(() => {\n    triggerShowStorage(note);\n  }, [note]);\n\n  const getStorageItem = n => {\n    setNote({\n      title: n,\n      note: JSON.parse(localStorage.getItem(n))\n    });\n  };\n\n  const notesListRender = notes.map((n, id) => /*#__PURE__*/React.createElement(\"li\", {\n    key: id,\n    className: \"list-group-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    onClick: () => getStorageItem(n),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }\n  }, n, \" - \", JSON.parse(localStorage.getItem(n)))));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-group mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }\n  }, notesListRender));\n};\n\nexport default NoteDisplay; // return (\n// \t<div style={{ marginLeft: \"10px\", marginBottom: \"30px\" }}>List of notes:</div>\n// );","map":{"version":3,"sources":["/Users/carolinlabinski/Documents/THP_next/sem5/day4_blocnote/blocnote/src/components/NoteList/NoteList.jsx"],"names":["React","useState","useEffect","NoteDisplay","triggerShowStorage","note","setNote","notes","i","localStorage","length","push","key","getStorageItem","n","title","JSON","parse","getItem","notesListRender","map","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA4B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,MAAIM,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,YAAY,CAACC,MAAjC,EAAyCF,CAAC,EAA1C,EAA8C;AAC7CD,IAAAA,KAAK,CAACI,IAAN,CAAWF,YAAY,CAACG,GAAb,CAAiBJ,CAAjB,CAAX;AACA;;AAEDN,EAAAA,SAAS,CAAC,MAAM;AACfE,IAAAA,kBAAkB,CAACC,IAAD,CAAlB;AACA,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;;AAIA,QAAMQ,cAAc,GAAIC,CAAD,IAAO;AAC7BR,IAAAA,OAAO,CAAC;AAAES,MAAAA,KAAK,EAAED,CAAT;AAAYT,MAAAA,IAAI,EAAEW,IAAI,CAACC,KAAL,CAAWR,YAAY,CAACS,OAAb,CAAqBJ,CAArB,CAAX;AAAlB,KAAD,CAAP;AACA,GAFD;;AAIA,QAAMK,eAAe,GAAGZ,KAAK,CAACa,GAAN,CAAU,CAACN,CAAD,EAAIO,EAAJ,kBACjC;AAAI,IAAA,GAAG,EAAEA,EAAT;AAAa,IAAA,SAAS,EAAC,iBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAG,IAAA,IAAI,EAAC,GAAR;AAAY,IAAA,OAAO,EAAE,MAAMR,cAAc,CAACC,CAAD,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEA,CADF,SACQE,IAAI,CAACC,KAAL,CAAWR,YAAY,CAACS,OAAb,CAAqBJ,CAArB,CAAX,CADR,CADD,CADuB,CAAxB;AAQA,sBACC;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAI,IAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCK,eAAjC,CADD,CADD;AAKA,CAvCD;;AAyCA,eAAehB,WAAf,C,CACA;AACA;AACA","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst NoteDisplay = ({ triggerShowStorage }) => {\n\t// const getAllItems = () => {\n\t// \tvar allnotekeys = [];\n\t// \tfor (let i = 0; i <= localStorage.length; i++) {\n\t// \t\tconsole.log(\"Show keys \" + localStorage.key(i));\n\t// \t\tlet xx = allnotekeys.push(localStorage.key(i));\n\t// \t\t// let notekeys = JSON.parse(localStorage.getItem(localStorage.key(i)));\n\t// \t\tconsole.log(\"Keys list \" + allnotekeys);\n\t// \t\t// let allnotes = allnotekeys.map()\n\t// \t}\n\t// };\n\n\tconst [note, setNote] = useState({});\n\tlet notes = [];\n\tfor (let i = 0; i < localStorage.length; i++) {\n\t\tnotes.push(localStorage.key(i));\n\t}\n\n\tuseEffect(() => {\n\t\ttriggerShowStorage(note);\n\t}, [note]);\n\n\tconst getStorageItem = (n) => {\n\t\tsetNote({ title: n, note: JSON.parse(localStorage.getItem(n)) });\n\t};\n\n\tconst notesListRender = notes.map((n, id) => (\n\t\t<li key={id} className=\"list-group-item\">\n\t\t\t<a href=\"#\" onClick={() => getStorageItem(n)}>\n\t\t\t\t{n} - {JSON.parse(localStorage.getItem(n))}\n\t\t\t</a>\n\t\t</li>\n\t));\n\n\treturn (\n\t\t<div className=\"col-3\">\n\t\t\t<ul className=\"list-group mt-5\">{notesListRender}</ul>\n\t\t</div>\n\t);\n};\n\nexport default NoteDisplay;\n// return (\n// \t<div style={{ marginLeft: \"10px\", marginBottom: \"30px\" }}>List of notes:</div>\n// );\n"]},"metadata":{},"sourceType":"module"}